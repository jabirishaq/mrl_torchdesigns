@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.Catalog;
@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, });
    }
}
<div class="product-item" data-productid="@Model.Id">
    <div class="fltleft fullwidth">
        <div class="fltleft imagcontainer">
            <div class="picture">
                <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
                    <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
                </a>
            </div>
        </div>
        <div class="fltleft titlecontainer">
            <div>
                <h2 class="product-title">
                    <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })">@Model.Name</a>
                </h2>
            </div>
            <div class="fullwidth">
                <div class="fltleft discriptioncontainer">
                    <div class="prices">
                        @{

                            if ((Model.IsNewProduct) || (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice)))
                            {
                                if ((Model.IsNewProduct) && (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice)))
                                {


                                    <span class="strike"><span class="price old-price">@Model.ProductPrice.OldPrice <span><img src="~/Themes/MisterLandscaper/Content/images/NewItem_Tag.jpg" /></span></span></span>
                                    <span class="price actual-price" style="color:#ff0000">@Model.ProductPrice.Price <span><img src="~/Themes/MisterLandscaper/Content/images/Sale_Tag.jpg" style="margin-left:6px;" /></span></span>
                                }
                                else
                                {
                                    if (Model.IsNewProduct)
                                    {

                                        <span class="price actual-price">@Model.ProductPrice.Price<span><img src="~/Themes/MisterLandscaper/Content/images/NewItem_Tag.jpg" /></span></span>
                                    }
                                    else
                                    {

                                        <span class="strike"><span class="price old-price">@Model.ProductPrice.OldPrice</span></span>
                                        <span class="price actual-price" style="color:#ff0000">@Model.ProductPrice.Price<span><img src="~/Themes/MisterLandscaper/Content/images/Sale_Tag.jpg" style="margin-left:6px;" /></span></span>
                                    }

                                }
                            }
                            else
                            {
                                <span class="price actual-price">@Model.ProductPrice.Price</span>
                            }




                        }


                        @if (Model.ProductPrice.DisplayTaxShippingInfo)
                        {
                            var inclTax = EngineContext.Current.Resolve<IWorkContext>
                            ().TaxDisplayType == TaxDisplayType.IncludingTax;
                            //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                            //of course, you can modify appropriate locales to include VAT info there
                            <div class="tax-shipping-info">
                                @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                            </div>
                        }




                    </div>
                    <div class="details">


                        <div class="desctitle">Product Description:</div>
                        <div class="description">
                            @Html.Raw(Model.ShortDescription)
                        </div>

                    </div>
                </div>
                <div>

                    <div class="rightside">
                        @if (Model.Manifacturepartno.Length > 0)
                        {
                            <div>Part #: @Model.Manifacturepartno</div>
                        }

                        @if (Model.ReviewOverviewModel.AllowCustomerReviews)
                        {
                            int ratingPercent = 0;
                            if (Model.ReviewOverviewModel.TotalReviews != 0)
                            {
                                ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
                            }
                            <div class="product-rating-box" title="@string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)">
                                <div class="rating">
                                    <div style="width: @(ratingPercent)%">
                                    </div>
                                </div>
                            </div>
                        }

                        <div class="buttons">
                            @*<input type="button" value="@T("Products.Details")" class="button-1 product-box-detail-button" onclick="setLocation('@Url.RouteUrl("Product", new { SeName = Model.SeName })')" />*@
                            @if (!Model.ProductPrice.DisableBuyButton)
                            {
                                <input type="button" value="@(Model.ProductPrice.AvailableForPreOrder ? T("ShoppingCart.PreOrder") : T("ShoppingCart.AddToCart"))" class="button-2 product-box-add-to-cart-button" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink    ');return false;" />
                            }
                        </div>
                        @if (Model.IsBestSellers)
                        {
                            <span><img src="~/Themes/MisterLandscaper/Content/images/BestSeller_Updated.jpg" style="margin-top:3px;" /></span>
                        }

                        @Html.Widget("productbox_add_info", Model.Id)
                    </div>
                </div>
            </div>
        </div>
    </div>




</div>
