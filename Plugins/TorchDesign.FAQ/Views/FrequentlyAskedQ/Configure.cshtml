@{

    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

}
@model ConfigurationModel
@using Nop.Plugin.TorchDesign.FAQ.Models;
@using Nop.Web.Framework;
@using Nop.Core.Infrastructure;
@using System.Globalization;

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "Widgets-event-form" }))
{
    <table>
        <tr>
            <td>
                @{
    //var addNewUrlCategory = Url.RouteUrl("Plugin.Widgets.FAQ.AddCategoryPopup") + "?btnId=btnRefresh&formId=Widgets-event-form";
    var addNewUrl = Url.RouteUrl("Plugin.Widgets.FAQ.AddPopup") + "?btnId=btnRefresh&formId=Widgets-event-form";
                }
                <br />
                <input type="submit" id="btnAddNewOption" name="btnAddNewOption" value="@T("Plugins.Widgets.FAQ.AddFAQ")" onclick="javascript:OpenWindow('@(addNewUrl)', 1200, 700, true); return false;" class="k-button" />
                @*  <input type="submit" id="btnAddNewCategory" name="btnAddNewCategory" value="@T("Plugins.Widgets.FAQ.AddCategory")" onclick="javascript:OpenWindow('@(addNewUrlCategory)', 800, 200, true); return false;" class="k-button" />*@
                <a href="@Url.RouteUrl("Plugin.Widgets.FAQ.CategoryList")" class="k-button" style="padding:4px 11px 5px 11px;">@T("admin.catalog.bulkedit.list.searchcategory")</a>

                <input type="submit" id="btnRefresh" name="btnRefresh" style="display: none" />
                <script type="text/javascript">
                    $(document).ready(function () {
                        $('#btnRefresh').click(function () {
                            //refresh grid
                            var optionsGrid = $("#event-grid").data('kendoGrid');
                            //taxCountrystatezipGrid.dataSource.page(1); //new search. Set page size to 1
                            optionsGrid.dataSource.read();

                            //return false to don't reload a page
                            return false;
                        });
                    });
                </script>
            </td>
        </tr>
    </table>
    <br />
    <hr />
    <br />
    <table class="adminContent">
        <tr>
            <td>
                <div>
                    <div id="event-grid"></div>
                    <script>
                        $(document).ready(function () {
                            $("#event-grid").kendoGrid({
                                dataSource: {
                                    type: "json",
                                    transport: {
                                        read: {
                                            url: "@Html.Raw(Url.Action("FAQList", "FrequentlyAskedQ"))",
                                            type: "POST",
                                            dataType: "json"
                                        },
                                        @*update: {
                                            url: "@Html.Raw(Url.Action("UpdateFAQ", "FrequentlyAskedQ"))",
                                            type: "POST",
                                            dataType: "json"
                                        },*@
                                        destroy: {
                                            url: "@Html.Raw(Url.Action("DeleteFAQ", "FrequentlyAskedQ"))",
                                            type: "POST",
                                            dataType: "json"
                                        }
                                    },
                                    schema: {
                                        data: "Data",
                                        total: "Total",
                                        errors: "Errors",
                                        model: {
                                            id: "Id",
                                            fields: {
                                                PictureUrl: { editable: false, type: "string" },
                                                //LanguageName: { editable: false, type: "string" },
                                                //Height: { editable: true, type: "number" },
                                                //Width: { editable: true, type: "number" }
                                            }
                                        }
                                    },
                                    requestEnd: function (e) {
                                        if (e.type == "update") {
                                            this.read();
                                        }
                                    },
                                    error: function (e) {
                                        display_kendoui_grid_error(e);
                                        // Cancel the changes
                                        this.cancelChanges();
                                    },
                                    pageSize: @(defaultGridPageSize),
                                    serverPaging: true,
                                    serverFiltering: true,
                                    serverSorting: true
                                },

                                pageable: {

                                    refresh: true,
                                    pageSizes: [@(gridPageSizes)]
                                },
                                editable: {
                                    confirmation: false,
                                    mode: "inline"
                                },
                                scrollable: false,
                                columns: [
                                     @*{
                                         field: "CategoryName",
                                         title: "@T("Plugins.Widgets.FAQ.Category")",
                                         width: 150
                                     },*@

             {
                 field: "question",
                 title: "@T("Plugins.Widgets.FAQ.Question")",
                 width: 250
             },

             {
                 field: "description",
                 title: "@T("Plugins.Widgets.FAQ.Description")",
                 width: 440,

             }, {
                 field: "IsActive",
                 title: "@T("Plugins.TorchDesign.Customerorigin.isactive")",
                 width: 150,
                 headerAttributes: { style: "text-align:center" },
                 attributes: { style: "text-align:center" },
                 template: '<img src="@Url.Content("~/Administration/Content/images/")active-#=IsActive#.gif" />'
             },
              {
                  field: "DisplayOrder",
                  title: "@T("Plugins.Widgets.Slider.Displayorder")",
                  width: 150
              },

            {
                field: "Id",
                title: "@T("Admin.Common.Edit")",
                width: 80,
                template: "<input type='submit' value='@T("Admin.Common.Edit")' onclick=\"javascript:OpenWindow('@Url.RouteUrl("Plugin.Widgets.FAQ.EditPopup")?id=#=Id#&btnId=btnRefresh&formId=Widgets-event-form', 1200, 700, true); return false;\" class='k-button' />"
            },
               {
                   command: [{
                       name: "destroy",
                       text: "@T("Admin.Common.Delete")"
                   }],
                   width: 80
               }]
                            });
                        });
                    </script>
                </div>
            </td>

        </tr>
    </table>
}
@*@using (Html.BeginForm())
    {
        <br />
        <hr />
        <br />
        <table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.Title)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.Title)

                </td>
            </tr>
            @*<tr>
                <td class="adminTitle">
                 @Html.NopLabelFor(model => model.DisplayOption):
                </td>
                <td class="adminData">
                    @Html.DropDownListFor(model => model.DisplayOption, Model.AvailableOptions)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                 @Html.NopLabelFor(model => model.DisplayAsWidget):
                </td>
                <td class="adminData">
                   @Html.EditorFor(model => model.DisplayAsWidget)
                </td>
            </tr>
            <tr id="WidgetZones">
                <td class="adminTitle">
                    @Html.NopLabelFor(model => model.DisplayOn):
                </td>
                <td class="adminData">
                    @Html.DropDownListFor(model => model.DisplayOn, Model.AvailableZones)
                </td>
            </tr>

            <tr>
                <td colspan="2">
                    <input type="submit" name="save" class="k-button" value="@T("Admin.Common.Save")" />
                </td>
            </tr>
        </table>
        <script>

            $(document).ready(function () {

                $("#@Html.FieldIdFor(model => model.DisplayAsWidget)").click(toggleDisplay);

                toggleDisplay();

            });


         $("#@Html.FieldIdFor(model => model.DisplayAsWidget)").click(toggleDisplay);
         function toggleDisplay() {
             if ($('#@Html.FieldIdFor(model => model.DisplayAsWidget)').is(':checked')) {
                    $('#WidgetZones').show();

                }
                else {
                 $('#WidgetZones').hide();

                }
         }
        </script>
    }*@
  