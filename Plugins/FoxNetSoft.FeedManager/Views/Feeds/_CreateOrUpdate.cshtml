@model FoxNetSoft.Plugin.Feed.Manager.Models.FeedRecModel
@using FoxNetSoft.Plugin.Feed.Manager.Models
@using Nop.Web.Framework.Kendoui
@using Nop.Core.Events
@using Nop.Web.Framework.Events
@using Nop.Core.Infrastructure
@using Nop.Services.Events
@using Nop.Services.Catalog
@using Nop.Web.Framework
@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)

<div id="feed-edit">
    <ul>
        <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
            @T("Admin.FoxNetSoft.Plugin.Feed.Manager.Feed.Tab.Info")
        </li>
        <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
            @T("Admin.FoxNetSoft.Plugin.Feed.Manager.Feed.Tab.FeedSettings")
        </li>
        <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
            @T("Admin.FoxNetSoft.Plugin.Feed.Manager.Feed.Tab.ProductFilter")
        </li>
        <li @Html.RenderSelectedTabIndex(3, GetSelectedTabIndex())>
            @T("Admin.FoxNetSoft.Plugin.Feed.Manager.Feed.Tab.FeedCondition")
        </li>
        <li @Html.RenderSelectedTabIndex(4, GetSelectedTabIndex())>
            @T("Admin.FoxNetSoft.Plugin.Feed.Manager.Feed.Tab.Shedule")
        </li>
        <li @Html.RenderSelectedTabIndex(5, GetSelectedTabIndex())>
            @T("Admin.FoxNetSoft.Plugin.Feed.Manager.Feed.Tab.FTPSettings")
        </li>
    </ul>
    <div>
        @TabInfo()
    </div>
    <div>
        @TabFeedSettings()
    </div>
    <div>
        @TabProductFilter()
    </div>
    <div>
        @TabFeedCondition()
    </div>
    <div>
        @TabSheduleSettings()
    </div>
    <div>
        @TabFTPSettings()
    </div>
</div>
<script>
    $(document).ready(function() {
        $("#feed-edit").kendoTabStrip({
            animation:  {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });
    });
</script>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "feed-edit");
    EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}

@*save selected tab index*@
<input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">

@helper TabInfo()
{ 
    @Html.Partial(String.Format(Model.ViewPath,"_CreateOrUpdate.Info"), Model)  
}
@helper TabFeedSettings()
{
    @Html.Partial(String.Format(Model.ViewPath,"_CreateOrUpdate.FeedAttributes"), Model)  
}
@helper TabProductFilter()
{
    @Html.Partial(String.Format(Model.ViewPath,"_CreateOrUpdate.ProductFilter"), Model)  
}
@helper TabFeedCondition()
{
    @Html.Partial(String.Format(Model.ViewPath,"_CreateOrUpdate.FeedCondition"), Model)  
}
@helper TabSheduleSettings()
{
    @Html.Partial(String.Format(Model.ViewPath,"_CreateOrUpdate.SheduleSettings"), Model)  
}
@helper TabFTPSettings()
{
    @Html.Partial(String.Format(Model.ViewPath,"_CreateOrUpdate.FTPSettings"), Model)  
}
