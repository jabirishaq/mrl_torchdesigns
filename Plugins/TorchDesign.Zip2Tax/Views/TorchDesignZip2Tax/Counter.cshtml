@model CounterModel
@using Nop.Plugin.TorchDesign.Zip2Tax.Models;
@using Nop.Web.Framework;
@using Nop.Core.Infrastructure;
@using System.Globalization;
@{
    Layout = "~/Administration/Views/Shared/_AdminLayout.cshtml";

    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Plugins.TorchDesign.Zip2Tax.Counterheading").Text;
}

<link href="~/Plugins/TorchDesign.Zip2Tax/Content/taxstyle.css" rel="stylesheet" />

@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-sales.png")" alt="" />
            @T("Plugins.TorchDesign.Zip2Tax.Counterheading") <a href="/Admin/Tax/ConfigureProvider?systemName=TorchDesignZip2Tax">@T("Plugins.TorchDesign.Zip2Tax.Counterbacklinl")</a>
        </div>

    </div>
    <div style="margin-top:20px;margin-bottom:20px;">
        <div class="dmain">
            <div class="calltitle">
                <strong>@T("Plugins.TorchDesign.Zip2Tax.Findcall")</strong>
            </div>
            <div class="dateconain">
                <span> @Html.NopLabelFor(model => model.StartDate):</span>
                <span> @Html.EditorFor(model => model.StartDate)</span>
            </div>
            <div class="dateconain">
                <span>@Html.NopLabelFor(model => model.EndDate):</span>
                <span> @Html.EditorFor(model => model.EndDate)</span>
                <span></span>
            </div>
            <div class="fltleft"><input type="button" id="btnSearch" class="k-button" value="@T(" admin.common.search")" /></div>
        </div>
    </div>
    <p>
    </p>
    <table class="adminContent">
        <tr>
            <td>
                <div id="taxcall-grid"></div>

                <script>
                    $(document).ready(function() {
                        $("#taxcall-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("Counterlist", "TorchDesignZip2Tax"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalData
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                requestEnd: function (e) {
                                    if (e.type == "read") {
                                        var response = e.response;
                                        if (response) {
                                            //store extra data
                                            reportAggregates = e.response["ExtraData"];
                                        }
                                    }
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(defaultGridPageSize),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [@(gridPageSizes)]
                            },
                            editable: {
                                confirmation: false,
                                mode: "inline"
                            },
                            scrollable: false,
                            dataBound: onDataBound,
                            columns: [
                                {
                                    field: "Zipcode",
                                    title: "@T("Plugins.TorchDesign.Zip2Tax.Zipcode")",
                                    width: 200
                                },
                                {
                                    field: "TaxRate",
                                    title: "@T("Plugins.TorchDesign.Zip2Tax.TaxRate")",
                                    width: 300,

                                },
                                {
                                    field: "CallDate",
                                    title: "@T("Plugins.TorchDesign.Zip2Tax.CallDate")",
                                    width: 200,
                                    type: "date",
                                    format: "{0:G}",
                                    footerTemplate: '<div><strong>@T("Plugins.TorchDesign.Zip2Tax.TotalCall"): <span id=\"aggregator-call-block\"></span></strong></div>'

                                }
                            ]
                        } );
                    });
                </script>

                <script type="text/javascript">

                    var selectedIds = [];
                    var reportAggregates = "";

                    $(document).ready(function () {

                        //search button
                        $('#btnSearch').click(function () {
                            //search
                            var grid = $('#taxcall-grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            grid.dataSource.read();
                            //clear selected checkboxes
                            $('.checkboxGroups').attr('checked', false).change();
                            selectedIds = [];
                            return false;
                        });


                    });

                    function additionalData() {
                        return {
                            StartDate: $('#@Html.FieldIdFor(model => model.StartDate)').val(),
                            EndDate: $('#@Html.FieldIdFor(model => model.EndDate)').val(),
                        };
                    }

                    function onDataBound(e) {

                        //$('#taxcall-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                        //    var currentId = $(this).val();
                        //    var checked = jQuery.inArray(currentId, selectedIds);
                        //    //set checked based on if current checkbox's value is in selectedIds.
                        //    $(this).attr('checked', checked > -1);
                        //});

                        //updateMasterCheckbox();

                        //update Call totals summary
                        if (reportAggregates != "") {
                            for (var key in reportAggregates) {
                                $('#aggregator-call-block').text(reportAggregates['Totalcall']);

                            }
                        }


                    }

                    //function updateMasterCheckbox() {
                    //    var numChkBoxes = $('#taxcall-grid input[type=checkbox][id!=mastercheckbox]').length;
                    //    var numChkBoxesChecked = $('#taxcall-grid input[type=checkbox][checked][id!=mastercheckbox]').length;
                    //    $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                    //}
                </script>
            </td>
        </tr>
    </table>
}

